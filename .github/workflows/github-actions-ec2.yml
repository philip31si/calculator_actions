name: Push-to-EC2

# Trigger deployment only on push to main branch
on:
  push:
    branches:
      - main  

jobs:
  deploy:
    name: Deploy to EC2 on main branch push
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout the files
        uses: actions/checkout@v2

      # Deploy to EC2 using SSH
      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          REMOTE_HOST: ${{ secrets.HOST_DNS }}
          REMOTE_USER: ${{ secrets.USERNAME }}
          TARGET: ${{ secrets.TARGET_DIR }}

      # Run commands to set up Flask on EC2
      - name: Setup Flask app on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_DNS }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Update the server and install necessary dependencies
            sudo apt-get update -y
            # sudo apt-get install -y apache2 python3 python3-pip python3-venv

            # Navigate to the web directory
            # cd /var/www/html

            # Set up a Python virtual environment
            # python3 -m venv venv
            # source venv/bin/activate

            # Install Flask and any other dependencies (ensure requirements.txt exists)
            if [ -f "requirements.txt" ]; then
              pip install -r requirements.txt
            else
              # If requirements.txt doesn't exist, install Flask directly
              echo "Flask==2.0.3" > requirements.txt
              pip install -r requirements.txt
            fi

            # Start the Flask application (running on port 80)
            nohup flask run --host=0.0.0.0 --port=80 > flask.log 2>&1 &

            # Ensure Apache is running
            sudo systemctl start apache2
            sudo systemctl enable apache2
